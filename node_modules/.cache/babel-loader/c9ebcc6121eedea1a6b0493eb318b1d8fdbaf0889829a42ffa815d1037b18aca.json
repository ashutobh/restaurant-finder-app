{"ast":null,"code":"var _jsxFileName = \"/Users/abhardwaj/Development/React/restaurant-finder-app/src/components/AddRestaurant.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRestaurant = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    restaurantName: \"\",\n    restaurantAddress: \"\",\n    restaurantAddedByEmail: \"\"\n  });\n  const [formErrors, setFormErrors] = useState({\n    restaurantName: \"\",\n    restaurantAddress: \"\",\n    restaurantAddedByEmail: \"\"\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    // Update form data\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Perform validation\n    if (name === \"restaurantName\" && value === \"\") {\n      setFormErrors({\n        ...formErrors,\n        restaurantName: \"Restaurant name is required.\"\n      });\n    } else if (name === \"restaurantAddress\" && value === \"\") {\n      setFormErrors({\n        ...formErrors,\n        restaurantAddress: \"Restaurant address is required.\"\n      });\n    } else if (name === \"restaurantAddedByEmail\" && !/^\\S+@\\S+\\.\\S+$/.test(value)) {\n      setFormErrors({\n        ...formErrors,\n        restaurantAddedByEmail: \"Invalid email address.\"\n      });\n    } else {\n      // Clear validation errors if input is valid\n      setFormErrors({\n        ...formErrors,\n        [name]: \"\"\n      });\n    }\n  };\n  const HandleSubmit = event => {\n    //event.preventDefault();\n\n    // Perform validation before submitting the form\n    const validationErrors = Object.keys(formData).reduce((errors, name) => {\n      if (formData[name] === \"\") {\n        errors[name] = `${name.charAt(0).toUpperCase() + name.slice(1)} is required.`;\n      } else if (name === \"restaurantAddedByEmail\" && !/^\\S+@\\S+\\.\\S+$/.test(formData[name])) {\n        errors[name] = \"Invalid email address.\";\n      }\n      return errors;\n    }, {});\n\n    // Update form errors\n    setFormErrors(validationErrors);\n\n    // Check if there are any validation errors\n    if (Object.values(validationErrors).every(error => error === \"\")) {\n      // Perform custom business logic or submit the form\n      try {\n        axios.post(\"http://localhost:8080/restaurant/api/v1/addRestaurant/1\", {\n          restaurantName: formData.restaurantName,\n          restaurantAddress: formData.lastName,\n          restaurantAddedByEmail: formData.email\n        }).then(res => {\n          console.log(res);\n          console.log(res.data);\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        window.location = \"/error\"; //This line of code will redirect you once the submission is succeed\n      }\n      return alert(\"Restaurant Added Successfully\");\n    } else {\n      console.log(\"Form validation failed. Please check the errors.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Restaurant Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"restaurantName\",\n        value: formData.restaurantName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: formErrors.restaurantName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Restaurant Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"restaurantAddress\",\n        value: formData.restaurantAddress,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: formErrors.restaurantAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Restaurant Added By Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"restaurantAddedByEmail\",\n        value: formData.restaurantAddedByEmail,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: formErrors.restaurantAddedByEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: HandleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(AddRestaurant, \"2f3xE8TgsoaRZu7yGvyqL0W5Slk=\");\n_c = AddRestaurant;\nexport default AddRestaurant;\nvar _c;\n$RefreshReg$(_c, \"AddRestaurant\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddRestaurant","_s","formData","setFormData","restaurantName","restaurantAddress","restaurantAddedByEmail","formErrors","setFormErrors","handleInputChange","event","name","value","target","test","HandleSubmit","validationErrors","Object","keys","reduce","errors","charAt","toUpperCase","slice","values","every","error","axios","post","lastName","email","then","res","console","log","data","window","location","alert","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/abhardwaj/Development/React/restaurant-finder-app/src/components/AddRestaurant.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst AddRestaurant = () => {\n  const [formData, setFormData] = useState({\n    restaurantName: \"\",\n    restaurantAddress: \"\",\n    restaurantAddedByEmail: \"\",\n  });\n\n  const [formErrors, setFormErrors] = useState({\n    restaurantName: \"\",\n    restaurantAddress: \"\",\n    restaurantAddedByEmail: \"\",\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    // Update form data\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n\n    // Perform validation\n    if (name === \"restaurantName\" && value === \"\") {\n      setFormErrors({\n        ...formErrors,\n        restaurantName: \"Restaurant name is required.\",\n      });\n    } else if (name === \"restaurantAddress\" && value === \"\") {\n      setFormErrors({\n        ...formErrors,\n        restaurantAddress: \"Restaurant address is required.\",\n      });\n    } else if (\n      name === \"restaurantAddedByEmail\" &&\n      !/^\\S+@\\S+\\.\\S+$/.test(value)\n    ) {\n      setFormErrors({\n        ...formErrors,\n        restaurantAddedByEmail: \"Invalid email address.\",\n      });\n    } else {\n      // Clear validation errors if input is valid\n      setFormErrors({\n        ...formErrors,\n        [name]: \"\",\n      });\n    }\n  };\n\n  const HandleSubmit = (event) => {\n    //event.preventDefault();\n\n    // Perform validation before submitting the form\n    const validationErrors = Object.keys(formData).reduce((errors, name) => {\n      if (formData[name] === \"\") {\n        errors[name] = `${\n          name.charAt(0).toUpperCase() + name.slice(1)\n        } is required.`;\n      } else if (\n        name === \"restaurantAddedByEmail\" &&\n        !/^\\S+@\\S+\\.\\S+$/.test(formData[name])\n      ) {\n        errors[name] = \"Invalid email address.\";\n      }\n      return errors;\n    }, {});\n\n    // Update form errors\n    setFormErrors(validationErrors);\n\n    // Check if there are any validation errors\n    if (Object.values(validationErrors).every((error) => error === \"\")) {\n      // Perform custom business logic or submit the form\n      try {\n        axios\n          .post(\"http://localhost:8080/restaurant/api/v1/addRestaurant/1\", {\n            restaurantName: formData.restaurantName,\n            restaurantAddress: formData.lastName,\n            restaurantAddedByEmail: formData.email,\n          })\n          .then((res) => {\n            console.log(res);\n            console.log(res.data);\n          });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        window.location = \"/error\"; //This line of code will redirect you once the submission is succeed\n      }\n\n      return alert(\"Restaurant Added Successfully\");\n    } else {\n      console.log(\"Form validation failed. Please check the errors.\");\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        Restaurant Name:\n        <input\n          type=\"text\"\n          name=\"restaurantName\"\n          value={formData.restaurantName}\n          onChange={handleInputChange}\n        />\n        <span className=\"error\">{formErrors.restaurantName}</span>\n      </label>\n\n      <label>\n        Restaurant Address:\n        <input\n          type=\"text\"\n          name=\"restaurantAddress\"\n          value={formData.restaurantAddress}\n          onChange={handleInputChange}\n        />\n        <span className=\"error\">{formErrors.restaurantAddress}</span>\n      </label>\n\n      <label>\n        Restaurant Added By Email:\n        <input\n          type=\"email\"\n          name=\"restaurantAddedByEmail\"\n          value={formData.restaurantAddedByEmail}\n          onChange={handleInputChange}\n        />\n        <span className=\"error\">{formErrors.restaurantAddedByEmail}</span>\n      </label>\n      <button type=\"submit\" onClick={HandleSubmit}>\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default AddRestaurant;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}