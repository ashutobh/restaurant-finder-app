{"ast":null,"code":"var _jsxFileName = \"/Users/abhardwaj/Development/React/restaurant-finder-app/src/components/AddUser.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddUser = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  });\n  const [formErrors, setFormErrors] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    // Update form data\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Perform validation\n    if (name === \"firstName\" && value === \"\") {\n      setFormErrors({\n        ...formErrors,\n        firstName: \"First name is required.\"\n      });\n    } else if (name === \"lastName\" && value === \"\") {\n      setFormErrors({\n        ...formErrors,\n        lastName: \"Last name is required.\"\n      });\n    } else if (name === \"email\" && !/^\\S+@\\S+\\.\\S+$/.test(value)) {\n      setFormErrors({\n        ...formErrors,\n        email: \"Invalid email address.\"\n      });\n    } else {\n      // Clear validation errors if input is valid\n      setFormErrors({\n        ...formErrors,\n        [name]: \"\"\n      });\n    }\n  };\n  const handleSubmit = event => {\n    _s();\n    event.preventDefault();\n\n    // Perform validation before submitting the form\n    const validationErrors = Object.keys(formData).reduce((errors, name) => {\n      if (formData[name] === \"\") {\n        errors[name] = `${name.charAt(0).toUpperCase() + name.slice(1)} is required.`;\n      } else if (name === \"email\" && !/^\\S+@\\S+\\.\\S+$/.test(formData[name])) {\n        errors[name] = \"Invalid email address.\";\n      }\n      return errors;\n    }, {});\n\n    // Update form errors\n    setFormErrors(validationErrors);\n\n    // Check if there are any validation errors\n    if (Object.values(validationErrors).every(error => error === \"\")) {\n      // Perform custom business logic or submit the form\n\n      const createUserRequest = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userEmailAddress: 'ashutosh.bhardwaj@gmail.com',\n          userFirstName: 'Ashutosh',\n          userLastName: 'Bhardwaj'\n        })\n      };\n      const [data, setData] = useState([]);\n      const [loading, setLoading] = useState(false);\n      useEffect(() => {\n        fetch(\"http://localhost:8080/restaurant/api/v1/addUser\", createUserRequest).then(response => response.json()).then(json => setData(json));\n      }, []);\n      console.log(\"Form submitted successfully!\");\n      console.log(\"Form Data:\", formData);\n    } else {\n      console.log(\"Form validation failed. Please check the errors.\");\n    }\n  };\n  _s(handleSubmit, \"e2WPURhZO+vgWkProC5DhPL24KA=\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        value: formData.firstName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: formErrors.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        value: formData.lastName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: formErrors.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: formErrors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s2(AddUser, \"l7xff2T/dnuTvwOp/YgxrrEHGnc=\");\n_c = AddUser;\nexport default AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","Button","Form","jsxDEV","_jsxDEV","AddUser","_s2","_s","$RefreshSig$","formData","setFormData","firstName","lastName","email","formErrors","setFormErrors","handleInputChange","event","name","value","target","test","handleSubmit","preventDefault","validationErrors","Object","keys","reduce","errors","charAt","toUpperCase","slice","values","every","error","createUserRequest","method","headers","body","JSON","stringify","userEmailAddress","userFirstName","userLastName","data","setData","loading","setLoading","useEffect","fetch","then","response","json","console","log","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/abhardwaj/Development/React/restaurant-finder-app/src/components/AddUser.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nconst AddUser = () => {\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  });\n\n  const [formErrors, setFormErrors] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    // Update form data\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n\n    // Perform validation\n    if (name === \"firstName\" && value === \"\") {\n      setFormErrors({\n        ...formErrors,\n        firstName: \"First name is required.\",\n      });\n    } else if (name === \"lastName\" && value === \"\") {\n      setFormErrors({\n        ...formErrors,\n        lastName: \"Last name is required.\",\n      });\n    } else if (name === \"email\" && !/^\\S+@\\S+\\.\\S+$/.test(value)) {\n      setFormErrors({\n        ...formErrors,\n        email: \"Invalid email address.\",\n      });\n    } else {\n      // Clear validation errors if input is valid\n      setFormErrors({\n        ...formErrors,\n        [name]: \"\",\n      });\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Perform validation before submitting the form\n    const validationErrors = Object.keys(formData).reduce((errors, name) => {\n      if (formData[name] === \"\") {\n        errors[name] = `${\n          name.charAt(0).toUpperCase() + name.slice(1)\n        } is required.`;\n      } else if (name === \"email\" && !/^\\S+@\\S+\\.\\S+$/.test(formData[name])) {\n        errors[name] = \"Invalid email address.\";\n      }\n      return errors;\n    }, {});\n\n    // Update form errors\n    setFormErrors(validationErrors);\n\n    // Check if there are any validation errors\n    if (Object.values(validationErrors).every((error) => error === \"\")) {\n      // Perform custom business logic or submit the form\n\n      const createUserRequest = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userEmailAddress: 'ashutosh.bhardwaj@gmail.com', userFirstName: 'Ashutosh', userLastName: 'Bhardwaj'})\n    };\n\n    const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  \n      useEffect(() => {\n        fetch(\"http://localhost:8080/restaurant/api/v1/addUser\", createUserRequest)\n          .then((response) => response.json())\n          .then((json) => setData(json));\n      }, []);\n      \n      console.log(\"Form submitted successfully!\");\n      console.log(\"Form Data:\", formData);\n    } else {\n      console.log(\"Form validation failed. Please check the errors.\");\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        First Name:\n        <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleInputChange}/>\n        <span className=\"error\">{formErrors.firstName}</span>\n      </label>\n\n      <label>\n        Last Name:\n        <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleInputChange}/>\n        <span className=\"error\">{formErrors.lastName}</span>\n      </label>\n\n      <label>\n        Email:\n        <input type=\"email\" name=\"email\" value={formData.email} onChange={handleInputChange} />\n        <span className=\"error\">{formErrors.email}</span>\n      </label>\n      <button type=\"submit\" onClick={handleSubmit}>Submit</button>\n    </form>\n  );\n\n};\n\nexport default AddUser;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC;IAC3CW,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMG,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;;IAEpC;IACAV,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACS,IAAI,GAAGC;IACV,CAAC,CAAC;;IAEF;IACA,IAAID,IAAI,KAAK,WAAW,IAAIC,KAAK,KAAK,EAAE,EAAE;MACxCJ,aAAa,CAAC;QACZ,GAAGD,UAAU;QACbH,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIO,IAAI,KAAK,UAAU,IAAIC,KAAK,KAAK,EAAE,EAAE;MAC9CJ,aAAa,CAAC;QACZ,GAAGD,UAAU;QACbF,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIM,IAAI,KAAK,OAAO,IAAI,CAAC,gBAAgB,CAACG,IAAI,CAACF,KAAK,CAAC,EAAE;MAC5DJ,aAAa,CAAC;QACZ,GAAGD,UAAU;QACbD,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAE,aAAa,CAAC;QACZ,GAAGD,UAAU;QACb,CAACI,IAAI,GAAG;MACV,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMI,YAAY,GAAIL,KAAK,IAAK;IAAAV,EAAA;IAC9BU,KAAK,CAACM,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAACjB,QAAQ,CAAC,CAACkB,MAAM,CAAC,CAACC,MAAM,EAAEV,IAAI,KAAK;MACtE,IAAIT,QAAQ,CAACS,IAAI,CAAC,KAAK,EAAE,EAAE;QACzBU,MAAM,CAACV,IAAI,CAAC,GAAI,GACdA,IAAI,CAACW,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGZ,IAAI,CAACa,KAAK,CAAC,CAAC,CAC5C,eAAc;MACjB,CAAC,MAAM,IAAIb,IAAI,KAAK,OAAO,IAAI,CAAC,gBAAgB,CAACG,IAAI,CAACZ,QAAQ,CAACS,IAAI,CAAC,CAAC,EAAE;QACrEU,MAAM,CAACV,IAAI,CAAC,GAAG,wBAAwB;MACzC;MACA,OAAOU,MAAM;IACf,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACAb,aAAa,CAACS,gBAAgB,CAAC;;IAE/B;IACA,IAAIC,MAAM,CAACO,MAAM,CAACR,gBAAgB,CAAC,CAACS,KAAK,CAAEC,KAAK,IAAKA,KAAK,KAAK,EAAE,CAAC,EAAE;MAClE;;MAEA,MAAMC,iBAAiB,GAAG;QACxBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,gBAAgB,EAAE,6BAA6B;UAAEC,aAAa,EAAE,UAAU;UAAEC,YAAY,EAAE;QAAU,CAAC;MAChI,CAAC;MAED,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;MACtC,MAAM,CAAC8C,OAAO,EAAEC,UAAU,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;MAEzCgD,SAAS,CAAC,MAAM;QACdC,KAAK,CAAC,iDAAiD,EAAEd,iBAAiB,CAAC,CACxEe,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKP,OAAO,CAACO,IAAI,CAAC,CAAC;MAClC,CAAC,EAAE,EAAE,CAAC;MAENC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE7C,QAAQ,CAAC;IACrC,CAAC,MAAM;MACL4C,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;IACjE;EACF,CAAC;EAAC/C,EAAA,CA1CIe,YAAY;EA4ClB,oBACElB,OAAA;IAAAmD,QAAA,gBACEnD,OAAA;MAAAmD,QAAA,GAAO,aAEL,eAAAnD,OAAA;QAAOoD,IAAI,EAAC,MAAM;QAACtC,IAAI,EAAC,WAAW;QAACC,KAAK,EAAEV,QAAQ,CAACE,SAAU;QAAC8C,QAAQ,EAAEzC;MAAkB;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7FzD,OAAA;QAAM0D,SAAS,EAAC,OAAO;QAAAP,QAAA,EAAEzC,UAAU,CAACH;MAAS;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAERzD,OAAA;MAAAmD,QAAA,GAAO,YAEL,eAAAnD,OAAA;QAAOoD,IAAI,EAAC,MAAM;QAACtC,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEV,QAAQ,CAACG,QAAS;QAAC6C,QAAQ,EAAEzC;MAAkB;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3FzD,OAAA;QAAM0D,SAAS,EAAC,OAAO;QAAAP,QAAA,EAAEzC,UAAU,CAACF;MAAQ;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eAERzD,OAAA;MAAAmD,QAAA,GAAO,QAEL,eAAAnD,OAAA;QAAOoD,IAAI,EAAC,OAAO;QAACtC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEV,QAAQ,CAACI,KAAM;QAAC4C,QAAQ,EAAEzC;MAAkB;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvFzD,OAAA;QAAM0D,SAAS,EAAC,OAAO;QAAAP,QAAA,EAAEzC,UAAU,CAACD;MAAK;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACRzD,OAAA;MAAQoD,IAAI,EAAC,QAAQ;MAACO,OAAO,EAAEzC,YAAa;MAAAiC,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAGX,CAAC;AAACvD,GAAA,CAlHID,OAAO;AAAA2D,EAAA,GAAP3D,OAAO;AAoHb,eAAeA,OAAO;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}